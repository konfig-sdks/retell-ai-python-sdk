# coding: utf-8

"""
    Retell SDK

    API for voice AI. Effortlessly integrate human-like Voice AI into your product. | We are building an API that enables your product to provide an intuitive and engaging way for user interaction - through voice.

    The version of the OpenAPI document: 1.0.0
    Contact: founders@retellai.com
    Created by: https://www.retellai.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from retell_ai_python_sdk import schemas  # noqa: F401


class BaseAgent(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            llm_websocket_url = schemas.StrSchema
            voice_id = schemas.StrSchema
            voice_temperature = schemas.NumberSchema
            voice_speed = schemas.NumberSchema
            responsiveness = schemas.NumberSchema
            enable_backchannel = schemas.BoolSchema
            
            
            class ambient_sound(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "coffee-shop": "COFFEESHOP",
                        "convention-hall": "CONVENTIONHALL",
                        "summer-outdoor": "SUMMEROUTDOOR",
                        "mountain-outdoor": "MOUNTAINOUTDOOR",
                        "null": "NONE",
                    }
                
                @schemas.classproperty
                def COFFEESHOP(cls):
                    return cls("coffee-shop")
                
                @schemas.classproperty
                def CONVENTIONHALL(cls):
                    return cls("convention-hall")
                
                @schemas.classproperty
                def SUMMEROUTDOOR(cls):
                    return cls("summer-outdoor")
                
                @schemas.classproperty
                def MOUNTAINOUTDOOR(cls):
                    return cls("mountain-outdoor")
                
                @schemas.classproperty
                def NONE(cls):
                    return cls("null")
            agent_name = schemas.StrSchema
            
            
            class language(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "en-US": "ENUS",
                        "en-IN": "ENIN",
                        "en-GB": "ENGB",
                        "de-DE": "DEDE",
                        "es-ES": "ESES",
                        "es-419": "ES419",
                        "hi-IN": "HIIN",
                        "ja-JP": "JAJP",
                        "pt-PT": "PTPT",
                        "pt-BR": "PTBR",
                    }
                
                @schemas.classproperty
                def ENUS(cls):
                    return cls("en-US")
                
                @schemas.classproperty
                def ENIN(cls):
                    return cls("en-IN")
                
                @schemas.classproperty
                def ENGB(cls):
                    return cls("en-GB")
                
                @schemas.classproperty
                def DEDE(cls):
                    return cls("de-DE")
                
                @schemas.classproperty
                def ESES(cls):
                    return cls("es-ES")
                
                @schemas.classproperty
                def ES419(cls):
                    return cls("es-419")
                
                @schemas.classproperty
                def HIIN(cls):
                    return cls("hi-IN")
                
                @schemas.classproperty
                def JAJP(cls):
                    return cls("ja-JP")
                
                @schemas.classproperty
                def PTPT(cls):
                    return cls("pt-PT")
                
                @schemas.classproperty
                def PTBR(cls):
                    return cls("pt-BR")
            webhook_url = schemas.StrSchema
        
            @staticmethod
            def boosted_keywords() -> typing.Type['BaseAgentBoostedKeywords']:
                return BaseAgentBoostedKeywords
            format_text = schemas.BoolSchema
            optOutSensitiveDataStorage = schemas.BoolSchema
            __annotations__ = {
                "llm_websocket_url": llm_websocket_url,
                "voice_id": voice_id,
                "voice_temperature": voice_temperature,
                "voice_speed": voice_speed,
                "responsiveness": responsiveness,
                "enable_backchannel": enable_backchannel,
                "ambient_sound": ambient_sound,
                "agent_name": agent_name,
                "language": language,
                "webhook_url": webhook_url,
                "boosted_keywords": boosted_keywords,
                "format_text": format_text,
                "optOutSensitiveDataStorage": optOutSensitiveDataStorage,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["llm_websocket_url"]) -> MetaOapg.properties.llm_websocket_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voice_id"]) -> MetaOapg.properties.voice_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voice_temperature"]) -> MetaOapg.properties.voice_temperature: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["voice_speed"]) -> MetaOapg.properties.voice_speed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["responsiveness"]) -> MetaOapg.properties.responsiveness: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_backchannel"]) -> MetaOapg.properties.enable_backchannel: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ambient_sound"]) -> MetaOapg.properties.ambient_sound: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["agent_name"]) -> MetaOapg.properties.agent_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["language"]) -> MetaOapg.properties.language: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook_url"]) -> MetaOapg.properties.webhook_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boosted_keywords"]) -> 'BaseAgentBoostedKeywords': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["format_text"]) -> MetaOapg.properties.format_text: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["optOutSensitiveDataStorage"]) -> MetaOapg.properties.optOutSensitiveDataStorage: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["llm_websocket_url", "voice_id", "voice_temperature", "voice_speed", "responsiveness", "enable_backchannel", "ambient_sound", "agent_name", "language", "webhook_url", "boosted_keywords", "format_text", "optOutSensitiveDataStorage", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["llm_websocket_url"]) -> typing.Union[MetaOapg.properties.llm_websocket_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voice_id"]) -> typing.Union[MetaOapg.properties.voice_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voice_temperature"]) -> typing.Union[MetaOapg.properties.voice_temperature, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["voice_speed"]) -> typing.Union[MetaOapg.properties.voice_speed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["responsiveness"]) -> typing.Union[MetaOapg.properties.responsiveness, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_backchannel"]) -> typing.Union[MetaOapg.properties.enable_backchannel, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ambient_sound"]) -> typing.Union[MetaOapg.properties.ambient_sound, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["agent_name"]) -> typing.Union[MetaOapg.properties.agent_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["language"]) -> typing.Union[MetaOapg.properties.language, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook_url"]) -> typing.Union[MetaOapg.properties.webhook_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boosted_keywords"]) -> typing.Union['BaseAgentBoostedKeywords', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["format_text"]) -> typing.Union[MetaOapg.properties.format_text, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["optOutSensitiveDataStorage"]) -> typing.Union[MetaOapg.properties.optOutSensitiveDataStorage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["llm_websocket_url", "voice_id", "voice_temperature", "voice_speed", "responsiveness", "enable_backchannel", "ambient_sound", "agent_name", "language", "webhook_url", "boosted_keywords", "format_text", "optOutSensitiveDataStorage", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        llm_websocket_url: typing.Union[MetaOapg.properties.llm_websocket_url, str, schemas.Unset] = schemas.unset,
        voice_id: typing.Union[MetaOapg.properties.voice_id, str, schemas.Unset] = schemas.unset,
        voice_temperature: typing.Union[MetaOapg.properties.voice_temperature, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        voice_speed: typing.Union[MetaOapg.properties.voice_speed, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        responsiveness: typing.Union[MetaOapg.properties.responsiveness, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        enable_backchannel: typing.Union[MetaOapg.properties.enable_backchannel, bool, schemas.Unset] = schemas.unset,
        ambient_sound: typing.Union[MetaOapg.properties.ambient_sound, str, schemas.Unset] = schemas.unset,
        agent_name: typing.Union[MetaOapg.properties.agent_name, str, schemas.Unset] = schemas.unset,
        language: typing.Union[MetaOapg.properties.language, str, schemas.Unset] = schemas.unset,
        webhook_url: typing.Union[MetaOapg.properties.webhook_url, str, schemas.Unset] = schemas.unset,
        boosted_keywords: typing.Union['BaseAgentBoostedKeywords', schemas.Unset] = schemas.unset,
        format_text: typing.Union[MetaOapg.properties.format_text, bool, schemas.Unset] = schemas.unset,
        optOutSensitiveDataStorage: typing.Union[MetaOapg.properties.optOutSensitiveDataStorage, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'BaseAgent':
        return super().__new__(
            cls,
            *args,
            llm_websocket_url=llm_websocket_url,
            voice_id=voice_id,
            voice_temperature=voice_temperature,
            voice_speed=voice_speed,
            responsiveness=responsiveness,
            enable_backchannel=enable_backchannel,
            ambient_sound=ambient_sound,
            agent_name=agent_name,
            language=language,
            webhook_url=webhook_url,
            boosted_keywords=boosted_keywords,
            format_text=format_text,
            optOutSensitiveDataStorage=optOutSensitiveDataStorage,
            _configuration=_configuration,
            **kwargs,
        )

from retell_ai_python_sdk.model.base_agent_boosted_keywords import BaseAgentBoostedKeywords
